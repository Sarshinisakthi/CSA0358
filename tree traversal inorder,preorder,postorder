#include<stdio.h>
#include<malloc.h>
struct node
{
 struct node*left;
 int data;
 struct node*right;
}
*root=NULL,*newnode;
struct node* insert(struct node*root,int ele)
{
 if(root==NULL)
 {
 newnode=(struct node*)malloc(sizeof(struct node));
 newnode->data=ele;
 newnode->left=NULL;
 newnode->right=NULL;
 return (newnode);
 }
 else if(ele > root->data)
 root->right=insert(root->right,ele);
 else if(ele < root->data)
 root->left=insert(root->left,ele);
 return (root);
}
int inorder(struct node*root)
{
 if(root!=NULL)
 {
 inorder(root->left);
 printf("%d\t",root->data);
 inorder(root->right);
 }
}
int preorder(struct node*root)
{
 if(root!=NULL)
 {
 printf("%d\t",root->data);
 preorder(root->left);
 preorder(root->right);
 
 }
}
int postorder(struct node*root)
{
 if(root!=NULL)
 {
 postorder(root->left);
 postorder(root->right);
 printf("%d\t",root->data);
 
 }
}
int main()
{
 
 root=insert(root,5);
 root=insert (root,3);
 root=insert(root,12);
 root=insert(root,15);
 root=insert(root,25);
 inorder(root);
 printf("\n");
 preorder(root);
 printf("\n");
 postorder(root);
 return 0;
}
